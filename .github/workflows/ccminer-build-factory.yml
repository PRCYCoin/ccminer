# Copyright (c) 2018-2020 The Veil developers
# Copyright (c) 2020 The DAPS Project
# Copyright (c) 2020 The PRCY developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.
name: Github Actions CI for CCMiner
on: [push, pull_request]
env:
  SOURCE_ARTIFACT: source
jobs:
  create-source-distribution:
    name: Create Source Distribution
    runs-on: ubuntu-18.04
    env:
      ARTIFACT_DIR: source
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential nvidia-cuda-toolkit
    - name: Create Distribution Tarball
      run: |
        mkdir -p $ARTIFACT_DIR
        touch ccminer.tar.gz
        tar -czf ccminer.tar.gz --exclude=ccminer.tar.gz .
    - name: Prepare Files for Artifact
      run: |
        mv ccminer.tar.gz $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
        path: ${{ env.ARTIFACT_DIR }}
  build-x86_64-linux:
    name: Build for x86 Linux 64bit
    needs: create-source-distribution
    runs-on: ubuntu-18.04
    env:
      ARTIFACT_DIR: ccminer-x86_64-linux
      TEST_LOG_ARTIFACT_DIR: test-logs
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf ccminer.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential nvidia-cuda-toolkit
    - name: Build CCMiner
      run: |
        ./autogen.sh
        ./configure
        ./build.sh
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        strip $SOURCE_ARTIFACT/ccminer
        chmod +x $SOURCE_ARTIFACT/ccminer
        mv $SOURCE_ARTIFACT/ccminer $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ccminer-x86_64-linux
        path: ${{ env.ARTIFACT_DIR }}